function [x,U] = bvpq(m, xL, xR, q, f, alpha, beta)
% This function uses a centered finite difference scheme to solve 
% the following boundary value problem:
% 
%   u''(x) + qu(x) = f(x), u(x_L) = \alpha, u(x_R) = \beta
%
% Using m + 2 point grid and the following finite difference approx.
%
%    D^2U_j = 1/h^2(U_{j - 1} -2U_j +U_{j + 1})
%


x = linspace(xL, xR, m+2); % Generating grid 
h = (xR - xL)/(m - 1); % Grid spacing
% Generating A (epic one-liner)
A = (1/h^2).*(
    diag(((q*h^2 - 2)*ones(m, 1))) 
            + diag(ones(m - 1, 1), 1) 
            + diag(ones(m - 1, 1), -1)
            );
            
% Generating F
F = f(x(2:m+1))';
F(1) = F(1) - alpha/h^2;
F(m) = F(m) - beta/h^2;

% Solving U
U = A\F;
U = [alpha; U; beta];