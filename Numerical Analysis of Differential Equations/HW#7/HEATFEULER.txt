function [tt,zz] = HEATfeulerED(m,eta,t0,tf,N)
% HEATFORWARDEULER  Solve
%   u_t = u_xx ,  u(0, x) = eta
% for u(t, x) on the interval [t0,tf] with N steps in time
% and m+2 steps in space. Forward Euler in time via method of lines.
% 
% Usage: [tt,zz] = HEATfeulerED(m,eta,t0,tf,N)

% Compute step size in space
h = 1/(m + 1);
% Generate matrix for system of IVPs in time
A = (1/h^2).*(diag(((- 2)*ones(m, 1))) + ...
    diag(ones(m - 1, 1), 1) + ...
    diag(ones(m - 1, 1), -1));

% Define inline function for
% Solving system of IVP U(t)' = AU(t)
f = @(t, u) A*u;

% Define step in time. 
dt = (tf - t0) / N;
tt = t0:dt:tf;        % row vector of times
eta = eta(:);         % force to be column vector
s = length(eta);
zz = zeros(s,N+1);    % jth column is U at t_{j-1}
zz(:,1) = eta;

for j = 1:N           % forward Euler is (5.19) in LeVeque
    zz(:,j+1) = zz(:,j) + dt .* f(tt(j),zz(:,j));
end
